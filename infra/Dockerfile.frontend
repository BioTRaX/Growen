# NG-HEADER: Nombre de archivo: Dockerfile.frontend
# NG-HEADER: Ubicación: infra/Dockerfile.frontend
# NG-HEADER: Descripción: Build multi-stage para frontend (Vite/React) servido por Nginx.
# NG-HEADER: Lineamientos: Ver AGENTS.md

# --- FASE 1: Construcción (builder) ---
FROM node:22-alpine AS builder

WORKDIR /app

# Copiamos solo los manifests de paquetes.
COPY package.json package-lock.json ./

# Usamos 'npm ci' que es más rápido y seguro para builds.
RUN npm ci

# Copiamos el resto del código fuente del frontend.
COPY . .

# Creamos la build de producción (genera /app/dist)
RUN npm run build --if-present


# --- FASE 2: Producción (runtime) ---
FROM nginx:stable-alpine

# Borramos la página por defecto de Nginx.
RUN rm -rf /usr/share/nginx/html/*

# Copiamos SOLAMENTE la carpeta 'dist' generada en la fase anterior.
COPY --from=builder /app/dist /usr/share/nginx/html

# Creamos una configuración de Nginx para que funcione con Single-Page Applications (como Vite/React).
# Esto soluciona el problema de que las sub-rutas den error 404 al refrescar la página.
RUN echo 'server { \
        listen 80; \
        location / { \
            root /usr/share/nginx/html; \
            index index.html; \
            try_files $uri $uri/ /index.html; \
        } \
    }' > /etc/nginx/conf.d/default.conf

# El contenedor expondrá el puerto 80, donde Nginx escucha.
EXPOSE 80

# Comando para arrancar Nginx en primer plano.
CMD ["nginx", "-g", "daemon off;"]