# NG-HEADER: Nombre de archivo: 6f8e298d069b_init_schema.py
# NG-HEADER: Ubicación: db/migrations/versions/6f8e298d069b_init_schema.py
# NG-HEADER: Descripción: Migración Alembic: crea el esquema inicial.
# NG-HEADER: Lineamientos: Ver AGENTS.md
"""init schema

Revision ID: 6f8e298d069b
Revises: 
Create Date: 2025-08-15 15:49:48.124034
"""
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = '6f8e298d069b'
down_revision = None
branch_labels = None
depends_on = None

def upgrade() -> None:
    bind = op.get_bind()
    inspector = sa.inspect(bind)
    # ### commands auto generated by Alembic - please adjust! ###
    if not inspector.has_table('categories'):
        op.create_table(
            'categories',
            sa.Column('id', sa.Integer(), nullable=False),
            sa.Column('name', sa.String(length=200), nullable=False),
            sa.Column('parent_id', sa.Integer(), nullable=True),
            sa.ForeignKeyConstraint(['parent_id'], ['categories.id']),
            sa.PrimaryKeyConstraint('id'),
        )
    if not inspector.has_table('conversations'):
        op.create_table(
            'conversations',
            sa.Column('id', sa.Integer(), nullable=False),
            sa.Column('session_id', sa.String(length=100), nullable=False),
            sa.Column('created_at', sa.DateTime(), nullable=False),
            sa.PrimaryKeyConstraint('id'),
            sa.UniqueConstraint('session_id'),
        )
    if not inspector.has_table('jobs'):
        op.create_table(
            'jobs',
            sa.Column('id', sa.Integer(), nullable=False),
            sa.Column('type', sa.String(length=50), nullable=False),
            sa.Column('params', sa.JSON(), nullable=True),
            sa.Column('status', sa.String(length=20), nullable=False),
            sa.Column('created_at', sa.DateTime(), nullable=False),
            sa.Column('updated_at', sa.DateTime(), nullable=False),
            sa.Column('result', sa.JSON(), nullable=True),
            sa.PrimaryKeyConstraint('id'),
        )
    if not inspector.has_table('suppliers'):
        op.create_table(
            'suppliers',
            sa.Column('id', sa.Integer(), nullable=False),
            sa.Column('slug', sa.String(length=50), nullable=False),
            sa.Column('name', sa.String(length=100), nullable=False),
            sa.Column('created_at', sa.DateTime(), nullable=False),
            sa.PrimaryKeyConstraint('id'),
            sa.UniqueConstraint('slug'),
        )
    if not inspector.has_table('tags'):
        op.create_table(
            'tags',
            sa.Column('id', sa.Integer(), nullable=False),
            sa.Column('name', sa.String(length=100), nullable=False),
            sa.PrimaryKeyConstraint('id'),
            sa.UniqueConstraint('name'),
        )
    if not inspector.has_table('messages'):
        op.create_table(
            'messages',
            sa.Column('id', sa.Integer(), nullable=False),
            sa.Column('conversation_id', sa.Integer(), nullable=False),
            sa.Column('role', sa.String(length=20), nullable=False),
            sa.Column('content', sa.Text(), nullable=False),
            sa.Column('created_at', sa.DateTime(), nullable=False),
            sa.Column('meta', sa.JSON(), nullable=True),
            sa.ForeignKeyConstraint(['conversation_id'], ['conversations.id'], ondelete='CASCADE'),
            sa.PrimaryKeyConstraint('id'),
        )
    if not inspector.has_table('products'):
        op.create_table(
            'products',
            sa.Column('id', sa.Integer(), nullable=False),
            sa.Column('sku_root', sa.String(length=50), nullable=False),
            sa.Column('title', sa.String(length=200), nullable=False),
            sa.Column('brand_id', sa.Integer(), nullable=True),
            sa.Column('category_id', sa.Integer(), nullable=True),
            sa.Column('description_html', sa.Text(), nullable=True),
            sa.Column('slug', sa.String(length=200), nullable=True),
            sa.Column('status', sa.String(length=50), nullable=True),
            sa.Column('created_at', sa.DateTime(), nullable=False),
            sa.Column('updated_at', sa.DateTime(), nullable=False),
            sa.ForeignKeyConstraint(['brand_id'], ['categories.id']),
            sa.ForeignKeyConstraint(['category_id'], ['categories.id']),
            sa.PrimaryKeyConstraint('id'),
        )
    if not inspector.has_table('supplier_files'):
        op.create_table(
            'supplier_files',
            sa.Column('id', sa.Integer(), nullable=False),
            sa.Column('supplier_id', sa.Integer(), nullable=False),
            sa.Column('filename', sa.String(length=200), nullable=False),
            sa.Column('sha256', sa.String(length=64), nullable=False),
            sa.Column('rows', sa.Integer(), nullable=False),
            sa.Column('uploaded_at', sa.DateTime(), nullable=False),
            sa.Column('processed', sa.Boolean(), nullable=False),
            sa.Column('dry_run', sa.Boolean(), nullable=False),
            sa.Column('notes', sa.Text(), nullable=True),
            sa.ForeignKeyConstraint(['supplier_id'], ['suppliers.id']),
            sa.PrimaryKeyConstraint('id'),
        )
    if not inspector.has_table('images'):
        op.create_table(
            'images',
            sa.Column('id', sa.Integer(), nullable=False),
            sa.Column('product_id', sa.Integer(), nullable=False),
            sa.Column('url', sa.String(length=500), nullable=False),
            sa.Column('sort_order', sa.Integer(), nullable=True),
            sa.ForeignKeyConstraint(['product_id'], ['products.id'], ondelete='CASCADE'),
            sa.PrimaryKeyConstraint('id'),
        )
    if not inspector.has_table('product_tags'):
        op.create_table(
            'product_tags',
            sa.Column('product_id', sa.Integer(), nullable=False),
            sa.Column('tag_id', sa.Integer(), nullable=False),
            sa.ForeignKeyConstraint(['product_id'], ['products.id'], ondelete='CASCADE'),
            sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], ondelete='CASCADE'),
            sa.PrimaryKeyConstraint('product_id', 'tag_id'),
        )
    if not inspector.has_table('variants'):
        op.create_table(
            'variants',
            sa.Column('id', sa.Integer(), nullable=False),
            sa.Column('product_id', sa.Integer(), nullable=False),
            sa.Column('sku', sa.String(length=100), nullable=False),
            sa.Column('name', sa.String(length=100), nullable=True),
            sa.Column('value', sa.String(length=100), nullable=True),
            sa.Column('barcode', sa.String(length=100), nullable=True),
            sa.Column('price', sa.Numeric(precision=10, scale=2), nullable=True),
            sa.Column('promo_price', sa.Numeric(precision=10, scale=2), nullable=True),
            sa.Column('compare_at', sa.Numeric(precision=10, scale=2), nullable=True),
            sa.Column('created_at', sa.DateTime(), nullable=False),
            sa.Column('updated_at', sa.DateTime(), nullable=False),
            sa.ForeignKeyConstraint(['product_id'], ['products.id'], ondelete='CASCADE'),
            sa.PrimaryKeyConstraint('id'),
            sa.UniqueConstraint('sku'),
        )
    if not inspector.has_table('inventory'):
        op.create_table(
            'inventory',
            sa.Column('id', sa.Integer(), nullable=False),
            sa.Column('variant_id', sa.Integer(), nullable=False),
            sa.Column('warehouse', sa.String(length=100), nullable=True),
            sa.Column('stock_qty', sa.Integer(), nullable=False),
            sa.Column('min_qty', sa.Integer(), nullable=True),
            sa.Column('updated_at', sa.DateTime(), nullable=False),
            sa.ForeignKeyConstraint(['variant_id'], ['variants.id'], ondelete='CASCADE'),
            sa.PrimaryKeyConstraint('id'),
            sa.UniqueConstraint('variant_id'),
        )
    if not inspector.has_table('supplier_products'):
        op.create_table(
            'supplier_products',
            sa.Column('id', sa.Integer(), nullable=False),
            sa.Column('supplier_id', sa.Integer(), nullable=False),
            sa.Column('supplier_product_id', sa.String(length=100), nullable=False),
            sa.Column('title', sa.String(length=200), nullable=False),
            sa.Column('category_level_1', sa.String(length=100), nullable=True),
            sa.Column('category_level_2', sa.String(length=100), nullable=True),
            sa.Column('category_level_3', sa.String(length=100), nullable=True),
            sa.Column('min_purchase_qty', sa.Numeric(precision=10, scale=2), nullable=True),
            sa.Column('current_purchase_price', sa.Numeric(precision=10, scale=2), nullable=True),
            sa.Column('current_sale_price', sa.Numeric(precision=10, scale=2), nullable=True),
            sa.Column('last_seen_at', sa.DateTime(), nullable=True),
            sa.Column('internal_product_id', sa.Integer(), nullable=True),
            sa.Column('internal_variant_id', sa.Integer(), nullable=True),
            sa.ForeignKeyConstraint(['internal_product_id'], ['products.id']),
            sa.ForeignKeyConstraint(['internal_variant_id'], ['variants.id']),
            sa.ForeignKeyConstraint(['supplier_id'], ['suppliers.id']),
            sa.PrimaryKeyConstraint('id'),
            sa.UniqueConstraint('supplier_id', 'supplier_product_id'),
        )
    if not inspector.has_table('supplier_price_history'):
        op.create_table(
            'supplier_price_history',
            sa.Column('id', sa.Integer(), nullable=False),
            sa.Column('supplier_product_fk', sa.Integer(), nullable=False),
            sa.Column('file_fk', sa.Integer(), nullable=False),
            sa.Column('as_of_date', sa.Date(), nullable=False),
            sa.Column('purchase_price', sa.Numeric(precision=10, scale=2), nullable=True),
            sa.Column('sale_price', sa.Numeric(precision=10, scale=2), nullable=True),
            sa.Column('delta_purchase_pct', sa.Numeric(precision=10, scale=2), nullable=True),
            sa.Column('delta_sale_pct', sa.Numeric(precision=10, scale=2), nullable=True),
            sa.Column('created_at', sa.DateTime(), nullable=False),
            sa.ForeignKeyConstraint(['file_fk'], ['supplier_files.id']),
            sa.ForeignKeyConstraint(['supplier_product_fk'], ['supplier_products.id']),
            sa.PrimaryKeyConstraint('id'),
        )
    # ### end Alembic commands ###

def downgrade() -> None:
    bind = op.get_bind()
    inspector = sa.inspect(bind)
    # ### commands auto generated by Alembic - please adjust! ###
    if inspector.has_table('supplier_price_history'):
        op.drop_table('supplier_price_history')
    if inspector.has_table('supplier_products'):
        op.drop_table('supplier_products')
    if inspector.has_table('inventory'):
        op.drop_table('inventory')
    if inspector.has_table('variants'):
        op.drop_table('variants')
    if inspector.has_table('product_tags'):
        op.drop_table('product_tags')
    if inspector.has_table('images'):
        op.drop_table('images')
    if inspector.has_table('supplier_files'):
        op.drop_table('supplier_files')
    if inspector.has_table('products'):
        op.drop_table('products')
    if inspector.has_table('messages'):
        op.drop_table('messages')
    if inspector.has_table('tags'):
        op.drop_table('tags')
    if inspector.has_table('suppliers'):
        op.drop_table('suppliers')
    if inspector.has_table('jobs'):
        op.drop_table('jobs')
    if inspector.has_table('conversations'):
        op.drop_table('conversations')
    if inspector.has_table('categories'):
        op.drop_table('categories')
    # ### end Alembic commands ###
